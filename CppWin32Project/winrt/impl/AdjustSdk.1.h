// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220110.5

#pragma once
#ifndef WINRT_AdjustSdk_1_H
#define WINRT_AdjustSdk_1_H
#include "winrt/impl/AdjustSdk.0.h"
WINRT_EXPORT namespace winrt::AdjustSdk
{
    struct __declspec(empty_bases) IAdjustAttributionClass :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustAttributionClass>
    {
        IAdjustAttributionClass(std::nullptr_t = nullptr) noexcept {}
        IAdjustAttributionClass(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAdjustAttributionStatic :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustAttributionStatic>
    {
        IAdjustAttributionStatic(std::nullptr_t = nullptr) noexcept {}
        IAdjustAttributionStatic(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAdjustClass :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustClass>
    {
        IAdjustClass(std::nullptr_t = nullptr) noexcept {}
        IAdjustClass(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAdjustConfigClass :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustConfigClass>
    {
        IAdjustConfigClass(std::nullptr_t = nullptr) noexcept {}
        IAdjustConfigClass(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAdjustConfigFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustConfigFactory>
    {
        IAdjustConfigFactory(std::nullptr_t = nullptr) noexcept {}
        IAdjustConfigFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAdjustEventClass :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustEventClass>
    {
        IAdjustEventClass(std::nullptr_t = nullptr) noexcept {}
        IAdjustEventClass(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAdjustEventFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustEventFactory>
    {
        IAdjustEventFactory(std::nullptr_t = nullptr) noexcept {}
        IAdjustEventFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAdjustEventFailureClass :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustEventFailureClass>
    {
        IAdjustEventFailureClass(std::nullptr_t = nullptr) noexcept {}
        IAdjustEventFailureClass(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAdjustEventSuccessClass :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustEventSuccessClass>
    {
        IAdjustEventSuccessClass(std::nullptr_t = nullptr) noexcept {}
        IAdjustEventSuccessClass(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAdjustSessionFailureClass :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustSessionFailureClass>
    {
        IAdjustSessionFailureClass(std::nullptr_t = nullptr) noexcept {}
        IAdjustSessionFailureClass(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAdjustSessionSuccessClass :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustSessionSuccessClass>
    {
        IAdjustSessionSuccessClass(std::nullptr_t = nullptr) noexcept {}
        IAdjustSessionSuccessClass(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAdjustStatic :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdjustStatic>
    {
        IAdjustStatic(std::nullptr_t = nullptr) noexcept {}
        IAdjustStatic(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExampleClass :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExampleClass>
    {
        IExampleClass(std::nullptr_t = nullptr) noexcept {}
        IExampleClass(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IExampleStatic :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExampleStatic>
    {
        IExampleStatic(std::nullptr_t = nullptr) noexcept {}
        IExampleStatic(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
